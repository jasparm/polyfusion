name: Deploy documentation mdBook site to Pages

on:
  push:
    branches: 
      - "main"
    paths:
      - 'documentation/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      MDBOOK_VERSION: 0.4.36
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      # caches cargo binary to hopefully not need to build it every single time
      - name: Cache mdBook binary
        id: cache-mdbook
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin/mdbook
          key: ${{ runner.os }}-mdbook-${{ env.MDBOOK_VERSION }}

      - name: Install mdBook if not cached
        if: steps.cache-mdbook.outputs.cache-hit != 'true'
        run: |
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh -s -- -y
          rustup update
          cargo install --version ${MDBOOK_VERSION} mdbook

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        
      - name: Build with mdBook
        run: mdbook build documentation
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: documentation/book

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
